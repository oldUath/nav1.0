{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.4f5d02d0.js","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList');\r\nconst $lastLi = $('.siteList').find('.last');\r\n//读取上一次关闭窗口存储的数据,parse是把字符串转换成对象\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)\r\n// 如果第一次灭有xObject,则构建一个数据结构，把连接等数据存储到里面\r\nconst hashMap = xObject || [\r\n    { logo: 'A', url: 'https://www.acfun.cn/' },\r\n    { logo: 'B', url: 'https://www.bilibili.com/' },\r\n];\r\n\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '')\r\n        .replace('http://', '')\r\n        .replace('www.', '')\r\n        .replace(/\\/.*/, '')//  /\\/.*/是正则表达式，删除/开头的东西，\\是转义\r\n}\r\n\r\n//渲染hashMap函数\r\nconst render = () => {\r\n    //先移除已经存在的节点，否则会出现重复\r\n    $siteList.find('li:not(.last)').remove()\r\n    hashMap.forEach((node, index) => {\r\n        const $li = $(`\r\n    <li>\r\n        <div class=\"site\">\r\n            <div class=\"logo\">\r\n                <div class=\"logo\">${node.logo[0]}</div>\r\n            </div>\r\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n            <div class=\"close\">\r\n                <svg class=\"icon\">\r\n                    <use xlink:href=\"#icon-cc-close-crude\"></use>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    </li>\r\n    `).insertBefore($lastLi)\r\n        $li.on('click', () => {\r\n            // 代替a标签，跳转\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            // 阻止冒泡\r\n            e.stopPropagation()\r\n            // 根据下表删除,只删除一个\r\n            hashMap.splice(index, 1)\r\n            render()\r\n        })\r\n    });\r\n}\r\nrender();\r\n\r\n\r\n$('.addButton').on('click', (e) => {\r\n    let url = prompt('请输入网址')\r\n    if (url.indexOf('https://') !== 0 && url.indexOf('http://') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0].toUpperCase(),\r\n        url: url\r\n    })\r\n\r\n    render();\r\n\r\n});\r\n\r\n\r\nwindow.onbeforeunload = () => {\r\n    //把对象变成字符串\r\n    const string = JSON.stringify(hashMap)\r\n    // localStorage是全局变量，把数据string存入到一个键里（x）\r\n    localStorage.setItem('x', string)\r\n}\r\n\r\n$(document).on('keypress', (e) => {\r\n    const { key } = e\r\n    for (let i = 0; i < hashMap.length; i++) {\r\n        if (hashMap[i].logo.toLowerCase() === key) {\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})"]}